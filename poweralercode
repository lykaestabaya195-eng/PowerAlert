'use client';

import { useState, useEffect } from 'react';
import { 
  Zap, 
  MapPin, 
  Bell, 
  Users, 
  Menu, 
  X, 
  Camera, 
  Upload, 
  AlertTriangle, 
  CheckCircle, 
  Target, 
  Building, 
  Globe, 
  Mail, 
  Phone, 
  Smartphone, 
  Shield, 
  TrendingUp 
} from 'lucide-react';

// Types
interface OutageReport {
  id: string;
  location: string;
  coordinates: [number, number];
  time: string;
  description: string;
  photo?: string;
  status: 'reported' | 'confirmed' | 'restored';
}

// Header Component
function Header({ onReportClick }: { onReportClick: () => void }) {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  return (
    <header className="bg-white shadow-sm border-b">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          <div className="flex items-center">
            <Zap className="h-8 w-8 text-blue-600" />
            <span className="ml-2 text-xl font-bold text-gray-900">PowerAlert</span>
          </div>

          <nav className="hidden md:flex items-center space-x-8">
            <a href="#features" className="text-gray-700 hover:text-blue-600">Features</a>
            <a href="#map" className="text-gray-700 hover:text-blue-600">Outage Map</a>
            <a href="#sdgs" className="text-gray-700 hover:text-blue-600">SDGs</a>
            <button
              onClick={onReportClick}
              className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
            >
              Report Outage
            </button>
          </nav>

          <button
            className="md:hidden"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
          </button>
        </div>

        {isMenuOpen && (
          <div className="md:hidden py-4 border-t">
            <div className="flex flex-col space-y-4">
              <a href="#features" className="text-gray-700 hover:text-blue-600">Features</a>
              <a href="#map" className="text-gray-700 hover:text-blue-600">Outage Map</a>
              <a href="#sdgs" className="text-gray-700 hover:text-blue-600">SDGs</a>
              <button
                onClick={onReportClick}
                className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors w-full"
              >
                Report Outage
              </button>
            </div>
          </div>
        )}
      </div>
    </header>
  );
}

// Hero Component
function Hero({ onReportClick }: { onReportClick: () => void }) {
  return (
    <section className="bg-gradient-to-br from-blue-600 to-blue-800 text-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
        <div className="grid md:grid-cols-2 gap-12 items-center">
          <div>
            <h1 className="text-4xl md:text-6xl font-bold mb-6">
              Real-Time Power Outage Reporting
            </h1>
            <p className="text-xl mb-8 text-blue-100">
              Report power outages instantly, track restoration progress, and stay informed with official updates from your utility provider.
            </p>
            
            <div className="flex flex-col sm:flex-row gap-4">
              <button
                onClick={onReportClick}
                className="bg-white text-blue-600 px-8 py-4 rounded-lg font-semibold hover:bg-blue-50 transition-colors flex items-center justify-center"
              >
                <Zap className="mr-2 h-5 w-5" />
                Report Outage Now
              </button>
              <button className="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold hover:bg-white hover:text-blue-600 transition-colors">
                View Outage Map
              </button>
            </div>

            <div className="grid grid-cols-3 gap-8 mt-12">
              <div className="text-center">
                <MapPin className="h-8 w-8 mx-auto mb-2" />
                <div className="text-2xl font-bold">500+</div>
                <div className="text-blue-200">Areas Covered</div>
              </div>
              <div className="text-center">
                <Bell className="h-8 w-8 mx-auto mb-2" />
                <div className="text-2xl font-bold">10K+</div>
                <div className="text-blue-200">Alerts Sent</div>
              </div>
              <div className="text-center">
                <Users className="h-8 w-8 mx-auto mb-2" />
                <div className="text-2xl font-bold">50K+</div>
                <div className="text-blue-200">Users</div>
              </div>
            </div>
          </div>

          <div className="bg-white/10 backdrop-blur-sm rounded-2xl p-8">
            <div className="bg-white rounded-lg p-6 text-gray-900">
              <h3 className="font-semibold mb-4">Latest Outage Reports</h3>
              <div className="space-y-4">
                {[
                  { area: "Barangay San Isidro", time: "2 mins ago", status: "Investigating" },
                  { area: "Barangay Santo NiÃ±o", time: "15 mins ago", status: "Repair Crew Dispatched" },
                  { area: "Barangay San Antonio", time: "1 hour ago", status: "Power Restored" }
                ].map((report, index) => (
                  <div key={index} className="flex items-center justify-between p-3 bg-gray-50 rounded">
                    <div>
                      <div className="font-medium">{report.area}</div>
                      <div className="text-sm text-gray-500">{report.time}</div>
                    </div>
                    <span className={`px-2 py-1 rounded text-xs font-medium ${
                      report.status === "Power Restored" ? "bg-green-100 text-green-800" :
                      report.status === "Repair Crew Dispatched" ? "bg-blue-100 text-blue-800" :
                      "bg-yellow-100 text-yellow-800"
                    }`}>
                      {report.status}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

// Report Form Component
function ReportForm({ onSubmit, onClose }: { 
  onSubmit: (report: Omit<OutageReport, 'id' | 'status'>) => void; 
  onClose: () => void; 
}) {
  const [formData, setFormData] = useState({
    location: '',
    description: '',
    photo: ''
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    const coordinates: [number, number] = [
      14.5995 + (Math.random() - 0.5) * 0.1,
      120.9842 + (Math.random() - 0.5) * 0.1
    ];

    onSubmit({
      location: formData.location,
      coordinates,
      time: new Date().toISOString(),
      description: formData.description,
      photo: formData.photo || undefined
    });
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }));
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-xl max-w-md w-full max-h-[90vh] overflow-y-auto">
        <div className="flex items-center justify-between p-6 border-b">
          <h2 className="text-xl font-semibold">Report Power Outage</h2>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600"
          >
            <X className="h-6 w-6" />
          </button>
        </div>

        <form onSubmit={handleSubmit} className="p-6 space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              <MapPin className="h-4 w-4 inline mr-1" />
              Location
            </label>
            <input
              type="text"
              name="location"
              value={formData.location}
              onChange={handleChange}
              placeholder="Enter your barangay or exact location"
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Outage Details
            </label>
            <textarea
              name="description"
              value={formData.description}
              onChange={handleChange}
              placeholder="Describe the outage (when it started, affected areas, etc.)"
              rows={4}
              className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              <Camera className="h-4 w-4 inline mr-1" />
              Upload Photo (Optional)
            </label>
            <div className="flex items-center justify-center w-full">
              <label className="flex flex-col items-center justify-center w-full h-32 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 hover:bg-gray-100">
                <div className="flex flex-col items-center justify-center pt-5 pb-6">
                  <Upload className="h-8 w-8 text-gray-400 mb-2" />
                  <p className="text-sm text-gray-500">Click to upload photo</p>
                </div>
                <input 
                  type="file" 
                  className="hidden" 
                  accept="image/*"
                  onChange={(e) => {
                    console.log('File selected:', e.target.files?.[0]);
                  }}
                />
              </label>
            </div>
          </div>

          <div className="flex gap-3 pt-4">
            <button
              type="button"
              onClick={onClose}
              className="flex-1 px-4 py-3 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
            >
              Cancel
            </button>
            <button
              type="submit"
              className="flex-1 px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-semibold"
            >
              Submit Report
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}

// Features Component
function Features() {
  const features = [
    {
      icon: MapPin,
      title: "Real-Time Outage Reporting",
      description: "Quickly report power outages with GPS location and optional photos. Instant submission for fast processing."
    },
    {
      icon: Bell,
      title: "Instant Notifications",
      description: "Get push notifications and SMS alerts for restoration updates and official announcements."
    },
    {
      icon: Users,
      title: "Community Transparency",
      description: "See all reports on the live map, building trust and collaboration between citizens and providers."
    },
    {
      icon: Smartphone,
      title: "Multi-Platform Access",
      description: "Available as mobile app and web platform, optimized for low-bandwidth situations."
    },
    {
      icon: Shield,
      title: "Official Updates",
      description: "Receive verified updates directly from power companies with accurate restoration timelines."
    },
    {
      icon: TrendingUp,
      title: "Data Insights",
      description: "Utility providers get valuable data to respond faster and plan better maintenance."
    }
  ];

  return (
    <section id="features" className="py-20 bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Key Features
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            PowerAlert connects communities and power providers through real-time reporting and updates
          </p>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <div
              key={index}
              className="bg-gray-50 rounded-xl p-6 hover:shadow-lg transition-shadow"
            >
              <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4">
                <feature.icon className="h-6 w-6 text-blue-600" />
              </div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">
                {feature.title}
              </h3>
              <p className="text-gray-600">
                {feature.description}
              </p>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

// Outage Map Component
function OutageMap({ reports }: { reports: OutageReport[] }) {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);

  const getStatusIcon = (status: OutageReport['status']) => {
    switch (status) {
      case 'reported':
        return <AlertTriangle className="h-4 w-4 text-yellow-500" />;
      case 'confirmed':
        return <AlertTriangle className="h-4 w-4 text-orange-500" />;
      case 'restored':
        return <CheckCircle className="h-4 w-4 text-green-500" />;
      default:
        return <AlertTriangle className="h-4 w-4 text-gray-500" />;
    }
  };

  const getStatusColor = (status: OutageReport['status']) => {
    switch (status) {
      case 'reported':
        return 'bg-yellow-100 text-yellow-800';
      case 'confirmed':
        return 'bg-orange-100 text-orange-800';
      case 'restored':
        return 'bg-green-100 text-green-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  if (!isClient) {
    return (
      <section id="map" className="py-20 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              Live Outage Map
            </h2>
            <p className="text-xl text-gray-600">
              View real-time power outage reports in your area
            </p>
          </div>
          <div className="bg-white rounded-xl shadow-sm p-8 text-center">
            <div className="animate-pulse">Loading map...</div>
          </div>
        </div>
      </section>
    );
  }

  return (
    <section id="map" className="py-20 bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Live Outage Map
          </h2>
          <p className="text-xl text-gray-600">
            View real-time power outage reports in your area
          </p>
        </div>

        <div className="grid lg:grid-cols-3 gap-8">
          <div className="lg:col-span-2 bg-white rounded-xl shadow-sm p-6">
            <div className="h-96 bg-blue-50 rounded-lg flex items-center justify-center">
              <div className="text-center">
                <MapPin className="h-12 w-12 text-blue-400 mx-auto mb-4" />
                <h3 className="text-lg font-semibold text-gray-700 mb-2">
                  Interactive Outage Map
                </h3>
                <p className="text-gray-500 mb-4">
                  Real-time visualization of power outages
                </p>
                <div className="flex justify-center space-x-4 text-sm">
                  <div className="flex items-center">
                    <div className="w-3 h-3 bg-yellow-500 rounded-full mr-2"></div>
                    <span>Reported</span>
                  </div>
                  <div className="flex items-center">
                    <div className="w-3 h-3 bg-orange-500 rounded-full mr-2"></div>
                    <span>Confirmed</span>
                  </div>
                  <div className="flex items-center">
                    <div className="w-3 h-3 bg-green-500 rounded-full mr-2"></div>
                    <span>Restored</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className="space-y-6">
            <h3 className="text-xl font-semibold text-gray-900 mb-4">
              Recent Reports ({reports.length})
            </h3>
            
            {reports.length === 0 ? (
              <div className="bg-white rounded-xl p-6 text-center">
                <AlertTriangle className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                <p className="text-gray-500">No outage reports yet</p>
                <p className="text-sm text-gray-400 mt-2">
                  Be the first to report a power outage in your area
                </p>
              </div>
            ) : (
              <div className="space-y-4 max-h-96 overflow-y-auto">
                {reports.map((report) => (
                  <div
                    key={report.id}
                    className="bg-white rounded-lg p-4 shadow-sm border"
                  >
                    <div className="flex items-start justify-between mb-2">
                      <h4 className="font-semibold text-gray-900">
                        {report.location}
                      </h4>
                      <div className="flex items-center">
                        {getStatusIcon(report.status)}
                        <span className={`ml-1 px-2 py-1 rounded text-xs font-medium ${getStatusColor(report.status)}`}>
                          {report.status}
                        </span>
                      </div>
                    </div>
                    <p className="text-gray-600 text-sm mb-2">
                      {report.description}
                    </p>
                    <div className="flex justify-between items-center text-xs text-gray-500">
                      <span>
                        {new Date(report.time).toLocaleDateString()} at{' '}
                        {new Date(report.time).toLocaleTimeString()}
                      </span>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  );
}

// SDG Section Component
function SDGSection() {
  const sdgs = [
    {
      icon: Zap,
      goal: "SDG 7",
      title: "Affordable and Clean Energy",
      description: "Promoting reliable and sustainable access to electricity through real-time monitoring and reporting."
    },
    {
      icon: Building,
      goal: "SDG 9",
      title: "Industry, Innovation and Infrastructure",
      description: "Building smarter and more resilient energy infrastructure using innovative technology solutions."
    },
    {
      icon: Globe,
      goal: "SDG 11",
      title: "Sustainable Cities and Communities",
      description: "Fostering community participation and enhancing local resilience to energy disruptions."
    },
    {
      icon: Target,
      goal: "SDG 16",
      title: "Peace, Justice and Strong Institutions",
      description: "Promoting transparency, accountability and trust between citizens and utility providers."
    }
  ];

  return (
    <section id="sdgs" className="py-20 bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Supporting Sustainable Development Goals
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            PowerAlert contributes to global sustainable development through innovative power outage management
          </p>
        </div>

        <div className="grid md:grid-cols-2 gap-8">
          {sdgs.map((sdg, index) => (
            <div
              key={index}
              className="bg-gray-50 rounded-xl p-6 hover:shadow-lg transition-shadow"
            >
              <div className="flex items-start space-x-4">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0">
                  <sdg.icon className="h-6 w-6 text-blue-600" />
                </div>
                <div>
                  <div className="flex items-center mb-2">
                    <span className="text-lg font-bold text-blue-600 mr-3">
                      {sdg.goal}
                    </span>
                    <h3 className="text-xl font-semibold text-gray-900">
                      {sdg.title}
                    </h3>
                  </div>
                  <p className="text-gray-600 leading-relaxed">
                    {sdg.description}
                  </p>
                </div>
              </div>
            </div>
          ))}
        </div>

        <div className="mt-12 text-center">
          <div className="bg-blue-50 rounded-2xl p-8 max-w-4xl mx-auto">
            <h3 className="text-2xl font-bold text-gray-900 mb-4">
              Overall Impact
            </h3>
            <p className="text-lg text-gray-700 leading-relaxed">
              PowerAlert integrates technology, community engagement, and institutional accountability 
              to improve energy services and contribute to sustainable development. By enabling real-time 
              reporting and transparent communication, we're building more resilient communities and 
              supporting the global transition to sustainable energy systems.
            </p>
          </div>
        </div>
      </div>
    </section>
  );
}

// Footer Component
function Footer() {
  return (
    <footer className="bg-gray-900 text-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="grid md:grid-cols-4 gap-8">
          <div className="md:col-span-2">
            <div className="flex items-center mb-4">
              <Zap className="h-8 w-8 text-blue-400" />
              <span className="ml-2 text-2xl font-bold">PowerAlert</span>
            </div>
            <p className="text-gray-400 mb-6 max-w-md">
              Making power restoration faster, communication clearer, and energy services more reliable 
              through real-time reporting and updates.
            </p>
            <div className="flex space-x-4">
              <div className="flex items-center text-gray-400">
                <Phone className="h-4 w-4 mr-2" />
                <span>+63 2 1234 5678</span>
              </div>
              <div className="flex items-center text-gray-400">
                <Mail className="h-4 w-4 mr-2" />
                <span>support@poweralert.ph</span>
              </div>
            </div>
          </div>

          <div>
            <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
            <ul className="space-y-2">
              <li><a href="#features" className="text-gray-400 hover:text-white transition-colors">Features</a></li>
              <li><a href="#map" className="text-gray-400 hover:text-white transition-colors">Outage Map</a></li>
              <li><a href="#sdgs" className="text-gray-400 hover:text-white transition-colors">SDGs</a></li>
              <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Download App</a></li>
            </ul>
          </div>

          <div>
            <h3 className="text-lg font-semibold mb-4">Support</h3>
            <ul className="space-y-2">
              <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Help Center</a></li>
              <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Contact Us</a></li>
              <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Privacy Policy</a></li>
              <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Terms of Service</a></li>
            </ul>
          </div>
        </div>

        <div className="border-t border-gray-800 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center">
          <p className="text-gray-400 text-sm">
            Â© 2024 PowerAlert. All rights reserved.
          </p>
          <div className="flex items-center mt-4 md:mt-0">
            <MapPin className="h-4 w-4 text-gray-400 mr-2" />
            <span className="text-gray-400 text-sm">Manila, Philippines</span>
          </div>
        </div>
      </div>
    </footer>
  );
}

// Main App Component
export default function PowerAlertApp() {
  const [reports, setReports] = useState<OutageReport[]>([]);
  const [showReportForm, setShowReportForm] = useState(false);

  const addReport = (report: Omit<OutageReport, 'id' | 'status'>) => {
    const newReport: OutageReport = {
      ...report,
      id: Date.now().toString(),
      status: 'reported'
    };
    setReports(prev => [newReport, ...prev]);
    setShowReportForm(false);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <style jsx global>{`
        @tailwind base;
        @tailwind components;
        @tailwind utilities;
        
        html {
          scroll-behavior: smooth;
        }
        
        ::-webkit-scrollbar {
          width: 6px;
        }
        
        ::-webkit-scrollbar-track {
          background: #f1f1f1;
        }
        
        ::-webkit-scrollbar-thumb {
          background: #c1c1c1;
          border-radius: 3px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
          background: #a8a8a8;
        }
      `}</style>
      
      <Header onReportClick={() => setShowReportForm(true)} />
      <Hero onReportClick={() => setShowReportForm(true)} />
      
      {showReportForm && (
        <ReportForm 
          onSubmit={addReport}
          onClose={() => setShowReportForm(false)}
        />
      )}
      
      <Features />
      <OutageMap reports={reports} />
      <SDGSection />
      <Footer />
    </div>
  );
}

// Package.json configuration (for reference)
/*
{
  "name": "poweralert-app",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "14.0.0",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "lucide-react": "^0.292.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^18.0.0",
    "@types/react-dom": "^18.0.0",
    "typescript": "^5.0.0",
    "tailwindcss": "^3.3.0",
    "autoprefixer": "^10.0.1",
    "postcss": "^8.4.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "14.0.0"
  }
}
*/

// Tailwind config (for reference)
/*
module.exports = {
  content: [
    './pages/**/*.{js,ts,jsx,tsx,mdx}',
    './components/**/*.{js,ts,jsx,tsx,mdx}',
    './app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: '#eff6ff',
          500: '#3b82f6',
          600: '#2563eb',
          700: '#1d4ed8',
        }
      }
    },
  },
  plugins: [],
}
*/
